$group
	
    import React from 'react'
	import PropTypes from 'prop-types'
	
	$if pkg.Build.react.useRedux
		import { connect } from 'react-redux'
	
	import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'
	import ${pkg.Styles.colors.primary} from '@material-ui/core/colors/${pkg.Styles.colors.primary}'
	import ${pkg.Styles.colors.secondary} from '@material-ui/core/colors/${pkg.Styles.colors.secondary}'
	
	$if pkg.Build.react.materialUI.useCssBaseline
		import CssBaseline from '@material-ui/core/CssBaseline'
	
	$if pkg.Build.react.materialUI.useCssBase
		import CssBase from '../components/CssBase'

    $if pkg.Build.react.materialUI.usePickers
        import
            @ MuiPickersUtilsProvider
            from '@material-ui/pickers'
        import DateFnsUtils from "@date-io/date-fns"
	
	$if pkg.Build.react.materialUI.useRouter
		import AppContainer from '../components/AppRouter'
	$else
		import AppContainer from './AppContainer'

    $if pkg.Styles.useCustomTheme
        import customTheme from '../theme'

	$if pkg.Styles.useCustomTheme
        # A theme with custom primary and secondary color. It's optional.
    $else
        # A custom theme.  It's optional.
	const theme
		_ createMuiTheme
            $if pkg.Styles.useCustomTheme
                @ customTheme
            $else
                {
                    { palette
                        { primary
                            @ light ${pkg.Styles.colors.primary}[300]
                            @ main ${pkg.Styles.colors.primary}[500]
                            @ dark ${pkg.Styles.colors.primary}[700]
                        { secondary
                            @ light ${pkg.Styles.colors.secondary}[300]
                            @ main ${pkg.Styles.colors.secondary}[500]
                            @ dark ${pkg.Styles.colors.secondary}[700]
                        @ type '${pkg.Styles.theme.dark ? 'dark' : 'light'}'

	react MuiThemeContainer

		render
			
			$if pkg.Build.react.useRedux
				prop dark
			$else
				const dark = false
			
			return
				< MuiThemeProvider
					@ theme {theme}
					$if pkg.Build.react.materialUI.useCssBaseline
						< CssBaseline
					$if pkg.Build.react.materialUI.useCssBase
						< CssBase
                    $if pkg.Build.react.materialUI.usePickers
                        < MuiPickersUtilsProvider
                            @ utils {DateFnsUtils}
                            < AppContainer
                    $else
                        < AppContainer

	$if pkg.Build.react.useRedux
		export default
			_ connect
				=>
					param state
					return
						{
							@ dark state.dark
				(
					@ MuiThemeContainer
	$else
		export default MuiThemeContainer
