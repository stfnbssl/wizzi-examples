module
	kind react

	$
		var md = {
            name: "CommonField"
        };
	
	v07/app/react/pureComponent(&md)
        $append imports
            import InputLabel from '@material-ui/core/InputLabel'
            import FormHelperText from '@material-ui/core/FormHelperText'
            import FormControl from './FormControl'
            import FormLabel from './FormLabel'
            import HelpToolTip from './HelpToolTip'

        render
            const 
                { 
                    $if app.Build.react.useRedux
                        @ input
                    $else
                        @ component
                    @ err
                    @ touched
                    @ children
                    @ label
                    @ required
                    @ fullWidth
                    @ editable
                    @ help
                    @ hideLabelUI
                    @ hideLabel
                    @ useDisplayValue
                    @ shrinkLabel
                    @ inlineLabel
                    @ marginBottom
                    @ autoHideLabel
                = this.props
            
            let fld = null
            let lbl = null
            
            const isBlank
                $if app.Build.react.useRedux
                    # FIXME
                    + false
                $else
                    _ component.isBlank
            
            const id
                $if app.Build.react.useRedux            
                    + input.name
                $else
                    _ component.getUniqueId
            
            if !hideLabelUI && !hideLabel && !autoHideLabel || label
                if editable && !useDisplayValue && !inlineLabel
                    set lbl =
                        < InputLabel 
                            @ htmlFor {id}
                            @ error
                                iif touched && err
                                    then true
                                    else false
                            # If label is blank then don't show as required
                            @ required {label && required}
                            @ shrink {shrinkLabel}
                            + {label}
                else
                    # We display a non-breaking space when the label is empty so that CompositeFields, like the
                    # ChainedSelectField, print all their display values on the same line.
                    const labelText
                        iif label
                            then label
                            else '\u00A0'
                    set lbl =
                        < FormLabel 
                            @ htmlFor {id}
                            @ error
                                iif touched && err
                                    then true
                                    else false
                            @ required {required && !useDisplayValue && editable}
                            @ shrink {useDisplayValue || !editable || shrinkLabel}
                            + {labelText}
                    if !inlineLabel
                        # We wrap the label in a div tag so that the proceeding display value appears on a
                        # different line
                        set lbl =
                            div 
                                + {lbl}
            const firstErr
                $if app.Build.react.useRedux            
                    + err
                $else
                    _ component.getFirstErr
            
            set fld =
                span 
                    + {lbl}
                    + {children}
                    { 
                        iif help && editable
                            then
                                < HelpToolTip 
                                    @ help {help}
                            else ''
                    { 
                        iif touched && err
                            then
                                < FormHelperText 
                                    @ error
                                    + {firstErr}
                            else null
            if editable || !isBlank
                return 
                    < FormControl 
                        @ fullWidth {fullWidth}
                        @ marginBottom {marginBottom}
                        + {fld}
            else
                return null