module
	kind react

	$include app-options
	$ 
		var md = { name: 'App' }

	app/component(&md, &app)

		$append  imports
			import AppBar from '@material-ui/core/AppBar'
			import Toolbar from '@material-ui/core/Toolbar'
			import Typography from '@material-ui/core/Typography'
			import Button from '@material-ui/core/Button'
			import Collapse from '@material-ui/core/Collapse'
			import StyledHtmlFragment from '../components/StyledHtmlFragment'
			import StylesEditor from '../components/StylesEditor'
			import { Row, Col } from '../../common/mui/grid'
			var readme = require('../readme.md')
			import MarkdownElement from '../../common/mui/docs/MarkdownElement'

		prop styleGroupIds
			[
			required
			
		style
			@ container
				{
					@ paddingTop '80px'

		state
			@ showReadme false
		
		render
			
			
			prop classes
			prop selectedHtmlFragmentRuleIds
			prop selectedStyleGroupMetaForm
			prop htmlFragments
			prop cssRules
			prop selectedHtmlFragmentId
			prop selectedRuleId
			prop selectedStyleGroupId
			prop styleGroupIds
			
			prop onSelectedHtmlFragmentChange
			prop onSelectedRuleChange
			prop onSelectedStyleGroupChange
			prop onStyleValuesChange

			log 'components.App.selectedHtmlFragmentRuleIds', selectedHtmlFragmentRuleIds
		
			return
				div
					< AppBar
						< Toolbar
							< Typography
								@ type "title" 
								@ color 'inherit'
								@ noWrap
								+ Styles builder
					. {classes.container}
						< Row
							< Col
								@ span {8}
								< StyledHtmlFragment
									@ selectedHtmlFragmentId {selectedHtmlFragmentId}
									@ htmlFragments {htmlFragments}
									@ cssRules {cssRules}
									@ onSelectedHtmlFragmentChange {onSelectedHtmlFragmentChange}
							< Col
								@ span {4}
								< StylesEditor
									@ selectedRuleId {selectedRuleId}
									@ selectedStyleGroupId {selectedStyleGroupId}
									@ ruleIds {selectedHtmlFragmentRuleIds}
									@ styleGroupIds {styleGroupIds}
									@ selectedStyleGroupMetaForm {selectedStyleGroupMetaForm}
									@ onSelectedRuleChange {onSelectedRuleChange}
									@ onSelectedStyleGroupChange {onSelectedStyleGroupChange}
									@ onStyleValuesChange {onStyleValuesChange}

						$*
						< Button
							+ Readme
							@ onClick
								=>
									_ this.setState
										{
											@ ...this.state
											@ showReadme !this.state.showReadme
						< Collapse
							@ in {this.state.showReadme}
							@ transitionDuration auto
							@ unmountOnExit
							< MarkdownElement
								@ text {readme}
						*$