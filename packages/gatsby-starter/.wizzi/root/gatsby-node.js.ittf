module
	kind es6

    const path = require("path")

	set exports.createPages
        =>
            param { boundActionCreators, graphql }
            const { createPage } = boundActionCreators
			$if app.Build.useBlog
                return
                    new Promise
                        =>
                            param resolve
                            param reject
                            _ createBlogPages
                                @ createPage
                                @ graphql
                                function
                                    param err
                                    if err
                                        return reject(err)
                                    _ createCheatsheetPages
                                        @ createPage
                                        @ graphql
                                        function
                                            param err
                                            if err
                                                return reject(err)
                                            return resolve()

	$if app.Build.useBlog
		function createBlogPages
			param createPage
			param graphql
			param callback
			const blogPostTemplate = path.resolve(`src/templates/blog-template.js`);
			_ graphql
				graphql-query
					{ allContentfulBlogPost
						: filter
							{
								@ node_locale
									{
										@ eq "en-US"
						: sort
							{ 
								@ order DESC
								@ fields
									[
										@ createdAt 
						: limit 1000

						{ edges
							{ node 
								@ id
								@ title
								@ slug
								@ createdAt
									: formatString "MMMM DD, YYYY"
								{ body
									{ childMarkdownRemark
										@ excerpt
											: pruneLength 250
				._  then
					=>
						param result
						log 'gatsby-node.result', result
						if result.errors
                            return
							    _ callback(result.errors)
						_ result.data.allContentfulBlogPost.edges.forEach
							=>
								param { node }
                                log 'gatsby-node.createPage', 'blog/' + node.slug
								_ createPage
									{
										@ path 'blog/' + node.slug
										@ component blogPostTemplate
										@ context
											{
												@ slug node.slug
						        log 'gatsby-node.callback'
                                return
                                    _ callback(null)

    function createCheatsheetPages
        param createPage
        param graphql
        param callback
        const cheatsheetTemplate = path.resolve(`src/templates/cheatsheet-template.js`);
        _ graphql
            graphql-query
                { allCheatsheet
                    { edges
                        { node 
                            @ id
                            @ slug
            ._  then
                =>
                    param result
                    log 'createCheatsheetPages.gatsby-node.result', result
                    if result.errors
                        return
                            _ callback(result.errors)
                    _ result.data.allCheatsheet.edges.forEach
                        =>
                            param { node }
                            log 'gatsby-node.createPage', 'cheatsheet/' + node.slug
                            _ createPage
                                {
                                    @ path 'cheatsheet/' + node.slug
                                    @ component cheatsheetTemplate
                                    @ context
                                        {
                                            @ slug node.slug
                            log 'createCheatsheetPages.gatsby-node.callback'
                            _ callback(null)                        