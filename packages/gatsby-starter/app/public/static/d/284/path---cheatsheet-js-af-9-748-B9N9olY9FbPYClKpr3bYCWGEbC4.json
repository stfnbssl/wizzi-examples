{"data":{"cheatsheet":{"id":"587ae466-abb3-584d-8f7a-5cc627d045f2","csName":"js","slug":"js","elements":[{"name":"function","items":[{"title":"Function with no params","itemSlug":"Function-with-no-params","generated":"function sayHello() {\n    console.log('Hello');\n}\n","generatedHighlighted":"<span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">function</span><span class=\"pp-pln\"> sayHello</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">log</span><span class=\"pp-pln\"> 'Hello'</span></div>"},{"title":"Function with unchecked params","itemSlug":"Function-with-unchecked-params","generated":"function sayHello(name) {\n    console.log('Hello ' + name);\n}\n","generatedHighlighted":"<span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello '</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">function</span><span class=\"pp-pln\"> sayHello</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">param</span><span class=\"pp-pln\"> name</span></div><div class=\"L3\"><span class=\"pp-ln\">   3 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">log</span><span class=\"pp-pln\"> 'Hello ' + name</span></div>"},{"title":"Function with checked params","itemSlug":"Function-with-checked-params","generated":"var verify = require('wizzi-utils').verify;\nfunction sayHello(name) {\n    if (verify.isNotEmpty(name) === false) {\n        return error(\n            'InvalidArgument', 'sayHello', { parameter: 'name', message: 'The name parameter must be a string. Received: ' + name }\n        );\n    }\n    console.log('Hello ' + name);\n}\n/**\n  params\n    string code\n      # the error name or number\n    string method\n    string message\n      # optional\n    { innerError\n      # optional\n*/\nfunction error(code, method, message, innerError) {\n    var parameter = null;\n    if (verify.isObject(message)) {\n        parameter = message.parameter;\n        message = message.message;\n    }\n    return verify.error(innerError, {\n        name: ( verify.isNumber(code) ? 'Err-' + code : code ),\n        method: '.' + method,\n        parameter: parameter,\n        sourcePath: __filename\n    }, message || 'Error message unavailable');\n}\n","generatedHighlighted":"<span class=\"token keyword\">var</span> verify <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wizzi-utils'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>verify<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>verify<span class=\"token punctuation\">.</span><span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">error</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">'InvalidArgument'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sayHello'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> parameter<span class=\"token punctuation\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token string\">'The name parameter must be a string. Received: '</span> <span class=\"token operator\">+</span> name <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello '</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/**\n  params\n    string code\n      # the error name or number\n    string method\n    string message\n      # optional\n    { innerError\n      # optional\n*/</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">code<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> innerError</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> parameter <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>verify<span class=\"token punctuation\">.</span><span class=\"token function\">isObject</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        parameter <span class=\"token operator\">=</span> message<span class=\"token punctuation\">.</span>parameter<span class=\"token punctuation\">;</span>\n        message <span class=\"token operator\">=</span> message<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> verify<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>innerError<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span> verify<span class=\"token punctuation\">.</span><span class=\"token function\">isNumber</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">'Err-'</span> <span class=\"token operator\">+</span> code <span class=\"token punctuation\">:</span> code <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        method<span class=\"token punctuation\">:</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> method<span class=\"token punctuation\">,</span>\n        parameter<span class=\"token punctuation\">:</span> parameter<span class=\"token punctuation\">,</span>\n        sourcePath<span class=\"token punctuation\">:</span> __filename\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> message <span class=\"token operator\">||</span> <span class=\"token string\">'Error message unavailable'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">function</span><span class=\"pp-pln\"> sayHello</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">string</span><span class=\"pp-pln\"> name</span></div><div class=\"L3\"><span class=\"pp-ln\">   3 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">log</span><span class=\"pp-pln\"> 'Hello ' + name</span></div>"},{"title":"Function with checked params and callback","itemSlug":"Function-with-checked-params-and-callback","generated":"var verify = require('wizzi-utils').verify;\nfunction sayHello(name, callback) {\n    if (typeof(callback) !== 'function') {\n        throw new Error(\n            error('InvalidArgument', 'sayHello', 'The callback parameter must be a function. Received: ' + callback)\n        );\n    };\n    if (verify.isNotEmpty(name) === false) {\n        return callback(error(\n            'InvalidArgument', 'sayHello', { parameter: 'name', message: 'The name parameter must be a string. Received: ' + name }\n        ));\n    }\n    console.log('Hello ' + name);\n}\n/**\n  params\n    string code\n      # the error name or number\n    string method\n    string message\n      # optional\n    { innerError\n      # optional\n*/\nfunction error(code, method, message, innerError) {\n    var parameter = null;\n    if (verify.isObject(message)) {\n        parameter = message.parameter;\n        message = message.message;\n    }\n    return verify.error(innerError, {\n        name: ( verify.isNumber(code) ? 'Err-' + code : code ),\n        method: '.' + method,\n        parameter: parameter,\n        sourcePath: __filename\n    }, message || 'Error message unavailable');\n}\n","generatedHighlighted":"<span class=\"token keyword\">var</span> verify <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wizzi-utils'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>verify<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'InvalidArgument'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sayHello'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'The callback parameter must be a function. Received: '</span> <span class=\"token operator\">+</span> callback<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>verify<span class=\"token punctuation\">.</span><span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">'InvalidArgument'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sayHello'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> parameter<span class=\"token punctuation\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token string\">'The name parameter must be a string. Received: '</span> <span class=\"token operator\">+</span> name <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello '</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/**\n  params\n    string code\n      # the error name or number\n    string method\n    string message\n      # optional\n    { innerError\n      # optional\n*/</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">code<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> innerError</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> parameter <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>verify<span class=\"token punctuation\">.</span><span class=\"token function\">isObject</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        parameter <span class=\"token operator\">=</span> message<span class=\"token punctuation\">.</span>parameter<span class=\"token punctuation\">;</span>\n        message <span class=\"token operator\">=</span> message<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> verify<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>innerError<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span> verify<span class=\"token punctuation\">.</span><span class=\"token function\">isNumber</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">'Err-'</span> <span class=\"token operator\">+</span> code <span class=\"token punctuation\">:</span> code <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        method<span class=\"token punctuation\">:</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> method<span class=\"token punctuation\">,</span>\n        parameter<span class=\"token punctuation\">:</span> parameter<span class=\"token punctuation\">,</span>\n        sourcePath<span class=\"token punctuation\">:</span> __filename\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> message <span class=\"token operator\">||</span> <span class=\"token string\">'Error message unavailable'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">function</span><span class=\"pp-pln\"> sayHello</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">string</span><span class=\"pp-pln\"> name</span></div><div class=\"L3\"><span class=\"pp-ln\">   3 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">callback</span></div><div class=\"L4\"><span class=\"pp-ln\">   4 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">log</span><span class=\"pp-pln\"> 'Hello ' + name</span></div>"},{"title":"Function with checked params and callback","itemSlug":"Function-with-checked-params-and-callback","generated":"{\n  \"name\": \"WizziModelLoadError\",\n  \"message\": \"Error: Tag not recognized: gotcha, wzElement: undefined, wzName:, row:6, col:9, source:c:/basefolder/temp.js.ittf\\nIn js Factory, calling loadFromNode.\\nLoading ittf document c:/basefolder/temp.js.ittf\",\n  \"errorLines\": [\n    \"0003     function sayHello\",\n    \"0004         string name\",\n    \"0005         any greetings\",\n    \"0006         gotcha fiona\",\n    \"             ^ Tag not recognized: gotcha  &lt;--- --- --- --- --- ERROR\",\n    \"0007         callback \",\n    \"0008         log 'Hello ' + name\"\n  ],\n  \"stack\": \"Error\\n    at new jsModelException (C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-js\\\\lib\\\\wizzi\\\\models\\\\js-model.g.js:10080:23)\\n    at xfunction.loadFromNode (C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-js\\\\lib\\\\wizzi\\\\models\\\\js-model.g.js:6403:23)\\n    at module.jsBase.wzLoadToChildColl (C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-js\\\\lib\\\\wizzi\\\\models\\\\js-model.g.js:100:18)\\n    at module.statement.loadChild (C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-js\\\\lib\\\\wizzi\\\\models\\\\js-model.g.js:1086:29)\\n    at module.loadChild (C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-js\\\\lib\\\\wizzi\\\\models\\\\js-model.g.js:2012:48)\\n    at module.loadFromNode (C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-js\\\\lib\\\\wizzi\\\\models\\\\js-model.g.js:2022:27)\\n    at loadModelFromMTree (C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-js\\\\lib\\\\wizzi\\\\models\\\\js-factory.g.js:66:29)\\n    at C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-js\\\\lib\\\\wizzi\\\\models\\\\js-factory.g.js:176:21\\n    at C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-mtree\\\\lib\\\\loader\\\\index.js:87:29\\n    at finalize (C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-mtree\\\\lib\\\\loader\\\\evaluator.js:106:5)\\n    at C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-mtree\\\\lib\\\\loader\\\\evaluator.js:91:13\\n    at execute_run_cb (C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-mtree\\\\lib\\\\jswizzi\\\\jsWizziRunner.js:1282:13)\\n    at C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-mtree\\\\lib\\\\jswizzi\\\\jsWizziRunner.js:1246:24\\n    at Object.getParsed (C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-mtree\\\\lib\\\\jswizzi\\\\jsWizziRunner.js:1207:20)\\n    at Object.run (C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-mtree\\\\lib\\\\jswizzi\\\\jsWizziRunner.js:1242:18)\\n    at module.exports (C:\\\\My\\\\wizzi\\\\wizzi-examples\\\\packages\\\\gatsby-starter\\\\app\\\\node_modules\\\\wizzi-mtree\\\\lib\\\\loader\\\\evaluator.js:81:23)\"\n}","generatedHighlighted":null,"ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">function</span><span class=\"pp-pln\"> sayHello</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">string</span><span class=\"pp-pln\"> name</span></div><div class=\"L3\"><span class=\"pp-ln\">   3 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">any</span><span class=\"pp-pln\"> greetings</span></div><div class=\"L4\"><span class=\"pp-ln\">   4 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">gotcha</span><span class=\"pp-pln\"> fiona</span></div><div class=\"L5\"><span class=\"pp-ln\">   5 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">callback</span></div><div class=\"L6\"><span class=\"pp-ln\">   6 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">log</span><span class=\"pp-pln\"> 'Hello ' + name</span></div>"}]},{"name":"call","items":[{"title":"Call with no parameters","itemSlug":"Call-with-no-parameters","generated":"execute();\n","generatedHighlighted":"<span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">_</span><span class=\"pp-pln\"> execute</span></div>"},{"title":"Call with string and number parameters","itemSlug":"Call-with-string-and-number-parameters","generated":"display('name', 3);\n","generatedHighlighted":"<span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">_</span><span class=\"pp-pln\"> display</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> 'name'</span></div><div class=\"L3\"><span class=\"pp-ln\">   3 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> 3</span></div>"},{"title":"Call with string and call parameters","itemSlug":"Call-with-string-and-call-parameters","generated":"showUserName(userId, getName(userId));\n","generatedHighlighted":"<span class=\"token function\">showUserName</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">,</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">_</span><span class=\"pp-pln\"> showUserName</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> userId</span></div><div class=\"L3\"><span class=\"pp-ln\">   3 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">_</span><span class=\"pp-pln\"> getName</span></div><div class=\"L4\"><span class=\"pp-ln\">   4 </span><span class=\"pp-pln\">        </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> userId</span></div>"},{"title":"Call with string and object parameters","itemSlug":"Call-with-string-and-object-parameters","generated":"showUserProfile(userId, {\n    showEmail: isEmailVisible(userId), \n    sections: [\n        'about-me', \n        'projects'\n    ]\n});\n","generatedHighlighted":"<span class=\"token function\">showUserProfile</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    showEmail<span class=\"token punctuation\">:</span> <span class=\"token function\">isEmailVisible</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n    sections<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'about-me'</span><span class=\"token punctuation\">,</span> \n        <span class=\"token string\">'projects'</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">_</span><span class=\"pp-pln\"> showUserProfile</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> userId</span></div><div class=\"L3\"><span class=\"pp-ln\">   3 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">{</span></div><div class=\"L4\"><span class=\"pp-ln\">   4 </span><span class=\"pp-pln\">        </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> showEmail</span></div><div class=\"L5\"><span class=\"pp-ln\">   5 </span><span class=\"pp-pln\">            </span><span class=\"pp-tag\">_</span><span class=\"pp-pln\"> isEmailVisible</span></div><div class=\"L6\"><span class=\"pp-ln\">   6 </span><span class=\"pp-pln\">                </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> userId</span></div><div class=\"L7\"><span class=\"pp-ln\">   7 </span><span class=\"pp-pln\">        </span><span class=\"pp-tag\">[</span><span class=\"pp-pln\"> sections</span></div><div class=\"L8\"><span class=\"pp-ln\">   8 </span><span class=\"pp-pln\">            </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> 'about-me'</span></div><div class=\"L9\"><span class=\"pp-ln\">   9 </span><span class=\"pp-pln\">            </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> 'projects'</span></div>"}]},{"name":"loops","items":[{"title":"foreach loop","itemSlug":"foreach-loop","generated":"var i, i_items=myarray, i_len=myarray.length, item;\nfor (i=0; i<i_len; i++) {\n    item = myarray[i];\n    item.a = item.b / 2;\n}\n","generatedHighlighted":"<span class=\"token keyword\">var</span> i<span class=\"token punctuation\">,</span> i_items<span class=\"token operator\">=</span>myarray<span class=\"token punctuation\">,</span> i_len<span class=\"token operator\">=</span>myarray<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>i_len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    item <span class=\"token operator\">=</span> myarray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    item<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>b <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">foreach</span><span class=\"pp-pln\"> item in myarray</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">set</span><span class=\"pp-pln\"> item.a = item.b / 2</span></div>"},{"title":"while loop","itemSlug":"while-loop","generated":"while (item.parent) {\n    item = item.parent;\n}\n","generatedHighlighted":"<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    item <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">while</span><span class=\"pp-pln\"> item.parent</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">set</span><span class=\"pp-pln\"> item = item.parent</span></div>"}]},{"name":"array","items":[{"title":"array concat single line statement","itemSlug":"array-concat-single-line-statement","generated":"myarray.concat(0, 1, 2, [3, 4]);\n","generatedHighlighted":"myarray<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">concat</span><span class=\"pp-pln\"> myarray 0, 1, 2, [3, 4]</span></div>"},{"title":"array concat multi line statement","itemSlug":"array-concat-multi-line-statement","generated":"myarray.concat(0, 1, 2, [\n    3, \n    4\n]);\n","generatedHighlighted":"myarray<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> \n    <span class=\"token number\">4</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">concat</span><span class=\"pp-pln\"> myarray</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> 0</span></div><div class=\"L3\"><span class=\"pp-ln\">   3 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> 1</span></div><div class=\"L4\"><span class=\"pp-ln\">   4 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> 2</span></div><div class=\"L5\"><span class=\"pp-ln\">   5 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">[</span></div><div class=\"L6\"><span class=\"pp-ln\">   6 </span><span class=\"pp-pln\">        </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> 3</span></div><div class=\"L7\"><span class=\"pp-ln\">   7 </span><span class=\"pp-pln\">        </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> 4</span></div>"},{"title":"array concat mixed line statement","itemSlug":"array-concat-mixed-line-statement","generated":"myarray.concat(0, 1, 2, [\n    3, \n    4\n]);\n","generatedHighlighted":"myarray<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> \n    <span class=\"token number\">4</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">concat</span><span class=\"pp-pln\"> myarray 0, 1</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> 2</span></div><div class=\"L3\"><span class=\"pp-ln\">   3 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">[</span></div><div class=\"L4\"><span class=\"pp-ln\">   4 </span><span class=\"pp-pln\">        </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> 3</span></div><div class=\"L5\"><span class=\"pp-ln\">   5 </span><span class=\"pp-pln\">        </span><span class=\"pp-tag\">@</span><span class=\"pp-pln\"> 4</span></div>"},{"title":"array forEach statement with default thisArg","itemSlug":"array-forEach-statement-with-default-thisArg","generated":"myarray.forEach(function(item, item_index, array) {\n    item.a = item.b / 2;\n}, this);\n","generatedHighlighted":"myarray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> item_index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    item<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>b <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">each</span><span class=\"pp-pln\"> item in myarray</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">set</span><span class=\"pp-pln\"> item.a = item.b / 2</span></div>"},{"title":"array forEach statement with explicit thisArg","itemSlug":"array-forEach-statement-with-explicit-thisArg","generated":"myarray.forEach(function(item, item_index, array) {\n    item.a = item.b / 2;\n}, myinstance);\n","generatedHighlighted":"myarray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> item_index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    item<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>b <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> myinstance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">each</span><span class=\"pp-pln\"> item in myarray myinstance</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">set</span><span class=\"pp-pln\"> item.a = item.b / 2</span></div>"},{"title":"array filter statement with default thisArg","itemSlug":"array-filter-statement-with-default-thisArg","generated":"myarray.filter(function(item, item_index, array) {\n    return item.a == 10;\n}, this);\n","generatedHighlighted":"myarray<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> item_index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>a <span class=\"token operator\">==</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">filter</span><span class=\"pp-pln\"> item in myarray</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">return</span><span class=\"pp-pln\"> item.a == 10</span></div>"},{"title":"array filter statement with explicit thisArg","itemSlug":"array-filter-statement-with-explicit-thisArg","generated":"myarray.filter(function(item, item_index, array) {\n    return item.a == this.maxAge;\n}, myinstance);\n","generatedHighlighted":"myarray<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> item_index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>a <span class=\"token operator\">==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>maxAge<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> myinstance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">filter</span><span class=\"pp-pln\"> item in myarray myinstance</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">return</span><span class=\"pp-pln\"> item.a == this.maxAge</span></div>"},{"title":"array find statement with default thisArg","itemSlug":"array-find-statement-with-default-thisArg","generated":"myarray.find(function(item, item_index, array) {\n    return item.a == 10;\n}, this);\n","generatedHighlighted":"myarray<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> item_index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>a <span class=\"token operator\">==</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">find</span><span class=\"pp-pln\"> item in myarray</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">return</span><span class=\"pp-pln\"> item.a == 10</span></div>"},{"title":"array find statement with explicit thisArg","itemSlug":"array-find-statement-with-explicit-thisArg","generated":"myarray.find(function(item, item_index, array) {\n    return item.a == this.maxAge;\n}, myinstance);\n","generatedHighlighted":"myarray<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> item_index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>a <span class=\"token operator\">==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>maxAge<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> myinstance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">find</span><span class=\"pp-pln\"> item in myarray myinstance</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">return</span><span class=\"pp-pln\"> item.a == this.maxAge</span></div>"},{"title":"array reduce statement","itemSlug":"array-reduce-statement","generated":"myarray.reduce( (acc, item, item_index, array) => {\n    return acc + item.a;\n}, 0);\n","generatedHighlighted":"myarray<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">,</span> item_index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> acc <span class=\"token operator\">+</span> item<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">reduce</span><span class=\"pp-pln\"> item in myarray 0</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">return</span><span class=\"pp-pln\"> acc + item.a</span></div>"}]},{"name":"react","items":[{"title":"class","itemSlug":"class","generated":"class MyComponent extends React.Component {\n    render() {\n        return  (\n                <h1>\n                Hello world\n                </h1>\n            )\n        ;\n    }\n}\n","generatedHighlighted":"<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span>  <span class=\"token punctuation\">(</span>\n                <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>\n                Hello world\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">react</span><span class=\"pp-pln\"> MyComponent</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">render</span></div><div class=\"L3\"><span class=\"pp-ln\">   3 </span><span class=\"pp-pln\">        </span><span class=\"pp-tag\">return</span></div><div class=\"L4\"><span class=\"pp-ln\">   4 </span><span class=\"pp-pln\">            </span><span class=\"pp-tag\">h1</span><span class=\"pp-pln\"> Hello world</span></div>"},{"title":"var","itemSlug":"var","generated":"var Hello =  (\n    <div>\n        <p>\n        sicut amet nequi abisse\n        </p>\n    \n    </div>\n)\n;\n","generatedHighlighted":"<span class=\"token keyword\">var</span> Hello <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n        sicut amet nequi abisse\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    \n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">var</span><span class=\"pp-pln\"> Hello</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">div</span></div><div class=\"L3\"><span class=\"pp-ln\">   3 </span><span class=\"pp-pln\">        </span><span class=\"pp-tag\">p</span><span class=\"pp-pln\"> sicut amet nequi abisse</span></div>"},{"title":"var svg","itemSlug":"var-svg","generated":"var Hello =  (\n    <div>\n        <svg>\n            <rect strokeDashoffset=\"10\">\n            </rect>\n        \n        </svg>\n    \n    </div>\n)\n;\n","generatedHighlighted":"<span class=\"token keyword\">var</span> Hello <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>svg<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>rect strokeDashoffset<span class=\"token operator\">=</span><span class=\"token string\">\"10\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>rect<span class=\"token operator\">></span>\n        \n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>svg<span class=\"token operator\">></span>\n    \n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n","ittfPretty":"<div class=\"L1\"><span class=\"pp-ln\">   1 </span><span class=\"pp-pln\"></span><span class=\"pp-tag\">var</span><span class=\"pp-pln\"> Hello</span></div><div class=\"L2\"><span class=\"pp-ln\">   2 </span><span class=\"pp-pln\">    </span><span class=\"pp-tag\">div</span></div><div class=\"L3\"><span class=\"pp-ln\">   3 </span><span class=\"pp-pln\">        </span><span class=\"pp-tag\">svg</span></div><div class=\"L4\"><span class=\"pp-ln\">   4 </span><span class=\"pp-pln\">            </span><span class=\"pp-tag\">rect</span></div><div class=\"L5\"><span class=\"pp-ln\">   5 </span><span class=\"pp-pln\">                </span><span class=\"pp-tag\">stroke-dashoffset</span><span class=\"pp-pln\"> 10</span></div>"}]}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"js"}}