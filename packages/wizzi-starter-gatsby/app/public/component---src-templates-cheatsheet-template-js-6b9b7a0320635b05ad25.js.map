{"version":3,"sources":["webpack:///./src/hooks/useCheatsheetIndex.js","webpack:///./src/layouts/CheatsheetLayout.js","webpack:///./src/templates/cheatsheet-template.js"],"names":["useCheatsheetIndex","useStaticQuery","allCheatsheet","edges","children","slug","className","map","cheat","node","to","csName","elements","element","name","items","item","index","key","href","itemSlug","title","Template","data","console","log","cheatsheet","CheatsheetLayout","Helmet","id","dangerouslySetInnerHTML","__html","ittfPretty","generatedHighlighted"],"mappings":"iSAkCaA,EAAqB,WAE9B,OAD0BC,YA7Bf,cA6BHC,cACaC,OCzBV,cAAyB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KACxB,OACQ,yBAAKC,UAAU,mBACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,8BAEXN,IAAqBO,KAAI,YAAsB,IAAbC,EAAY,EAAlBC,KACxB,OACQ,kBAAC,IAAD,CAAMC,GAAE,eAAiBF,EAAMH,MAC9BG,EAAMG,YAMvB,yBAAKL,UAAU,4BAEXN,IAAqBO,KAAI,YAAsB,IAAbC,EAAY,EAAlBC,KACxB,GAAID,EAAMH,OAASA,EACf,OAAOG,EAAMI,SAASL,KAAI,SAACM,GACnB,OACQ,6BACI,yBAAKP,UAAU,oCACdO,EAAQC,MAET,4BAEID,EAAQE,MAAMR,KAAI,SAACS,EAAMC,GACrB,OACQ,wBAAIC,IAAKD,GACL,uBAAGE,KAAM,IAAMH,EAAKI,UACnBJ,EAAKK,qBAmB9D,yBAAKf,UAAU,sBACbF,KCtDH,SAASkB,EAAT,GAA2B,IAARC,EAAO,EAAPA,KAC9BC,QAAQC,IAAI,sBAAuBF,GACnC,IAAMf,EAAQe,EAAKG,WACnB,OACQ,kBAACC,EAAD,CAAkBtB,KAAOG,EAAMH,MAC3B,kBAACuB,EAAA,EAAD,CAAQP,MAAK,uBAAyBb,EAAMG,SAI5CH,EAAMI,SAASL,KAAI,SAACM,GAChB,OACQ,6BACI,yBAAKP,UAAU,4BACdO,EAAQC,MAGTD,EAAQE,MAAMR,KAAI,SAACS,GACf,OACQ,6BACI,yBAAKV,UAAU,wBAAwBuB,GAAIb,EAAKI,UAC9CJ,EAAKK,OAEP,yBAAKf,UAAU,mBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,cAAcwB,wBAAyB,CAClDC,OAAQf,EAAKgB,eAMrB,yBAAK1B,UAAU,wBACX,yBAAKwB,wBAAyB,CAC1BC,OAAQf,EAAKiB,qC","file":"component---src-templates-cheatsheet-template-js-6b9b7a0320635b05ad25.js","sourcesContent":["/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi-examples\\node_modules\\wizzi-js\\lib\\artifacts\\js\\module\\gen\\main.js\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi-examples\\packages\\wizzi-starter-gatsby\\.wizzi\\src\\hooks\\useCheatsheetIndex.js.ittf\n*/\n'use strict';\nimport {useStaticQuery, graphql} from \"gatsby\";\nconst hookQuery = graphql`\n    query csIndex {\n        allCheatsheet(\n            sort: {\n                order: ASC, \n                fields: [\n                    csName\n                ]\n            }\n        )\n        {\n            edges {\n                node {\n                    id, \n                    csName, \n                    slug, \n                    elements {\n                        name, \n                        items {\n                            title, \n                            itemSlug\n                        }\n                    }\n                }\n            }\n        }}\n`\n;\nexport const useCheatsheetIndex = () => {\n    const { allCheatsheet } = useStaticQuery(hookQuery);\n    return allCheatsheet.edges;\n};\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi-examples\\node_modules\\wizzi-js\\lib\\artifacts\\js\\module\\gen\\main.js\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi-examples\\packages\\wizzi-starter-gatsby\\.wizzi\\src\\layouts\\CheatsheetLayout.js.ittf\n*/\n'use strict';\nimport React from \"react\";\nimport Link from \"gatsby-link\";\nimport '../styles/normalize.css';\nimport '../styles/cheatsheet.css';\nimport \"../styles/prism.css\";\nimport {useCheatsheetIndex} from \"../hooks/useCheatsheetIndex\";\nexport default ({ children, slug }) => {\n    return  (\n            <div className=\"cheatsheet-page\">\n                <div className=\"cheatsheet-sidebar\">\n                    <div className=\"cheatsheet-sidebar-schemas\">\n                    {\n                        useCheatsheetIndex().map(({ node: cheat }) => {\n                            return  (\n                                    <Link to={`/cheatsheet/${cheat.slug}`}>\n                                    {cheat.csName}</Link>\n                                )\n                            ;\n                        })\n                    }</div>\n                \n                    <div className=\"cheatsheet-sidebar-items\">\n                    {\n                        useCheatsheetIndex().map(({ node: cheat }) => {\n                            if (cheat.slug === slug) {\n                                return cheat.elements.map((element) => {\n                                        return  (\n                                                <div>\n                                                    <div className=\"cheatsheet-sidebar-element-title\">\n                                                    {element.name}</div>\n                                                \n                                                    <ul>\n                                                    {\n                                                        element.items.map((item, index) => {\n                                                            return  (\n                                                                    <li key={index}>\n                                                                        <a href={'#' + item.itemSlug}>\n                                                                        {item.title}\n                                                                        </a>\n                                                                    \n                                                                    </li>\n                                                                )\n                                                            ;\n                                                        })\n                                                    }</ul>\n                                                \n                                                </div>\n                                            )\n                                        ;\n                                    });\n                            }\n                        })\n                    }</div>\n                \n                </div>\n            \n                <div className=\"cheatsheet-content\">\n                { children }</div>\n            \n            </div>\n        )\n    ;\n}\n","/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi-examples\\node_modules\\wizzi-js\\lib\\artifacts\\js\\module\\gen\\main.js\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi-examples\\packages\\wizzi-starter-gatsby\\.wizzi\\src\\templates\\cheatsheet-template.js.ittf\n*/\n'use strict';\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport CheatsheetLayout from '@layouts/CheatsheetLayout';\nexport default function Template({data}) {\n    console.log('cheatsheet-template', data);\n    const cheat = data.cheatsheet;\n    return  (\n            <CheatsheetLayout slug={ cheat.slug }>\n                <Helmet title={`Cheatsheet schema - ${cheat.csName}`}>\n                </Helmet>\n            \n            {\n                cheat.elements.map((element) => {\n                    return  (\n                            <div>\n                                <div className=\"cheatsheet-element-title\">\n                                {element.name}</div>\n                            \n                            {\n                                element.items.map((item) => {\n                                    return  (\n                                            <div>\n                                                <div className=\"cheatsheet-item-title\" id={item.itemSlug}>\n                                                { item.title }</div>\n                                            \n                                                <div className=\"cheatsheet-item\">\n                                                    <div className=\"cheatsheet-ittf\">\n                                                        <pre className=\"prettyprint\" dangerouslySetInnerHTML={{\n                                                            __html: item.ittfPretty\n                                                        }}>\n                                                        </pre>\n                                                    \n                                                    </div>\n                                                \n                                                    <div className=\"cheatsheet-generated\">\n                                                        <pre dangerouslySetInnerHTML={{\n                                                            __html: item.generatedHighlighted\n                                                        }}>\n                                                        </pre>\n                                                    \n                                                    </div>\n                                                \n                                                </div>\n                                            \n                                            </div>\n                                        )\n                                    ;\n                                })\n                            }</div>\n                        )\n                    ;\n                })\n            }</CheatsheetLayout>\n        )\n    ;\n}\nexport const pageQuery = graphql`\n    query cheatsheetBySlug($slug: String!) {\n        cheatsheet(\n            slug: {\n                eq: $slug\n            }\n        )\n        {\n            id, \n            csName, \n            slug, \n            elements {\n                name, \n                items {\n                    title, \n                    itemSlug, \n                    generated, \n                    generatedHighlighted, \n                    ittfPretty\n                }\n            }\n        }}\n`\n"],"sourceRoot":""}