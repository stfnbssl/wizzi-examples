{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["data","console","log","posts","allContentfulBlogPost","edges","className","filter","post","node","title","length","map","key","id","to","slug","createdAt","body","childMarkdownRemark","excerpt"],"mappings":"kHAAA,yEAUe,sBAAe,IAAZA,EAAW,EAAXA,KACdC,QAAQC,IAAI,oBAAqBF,GADR,IAEVG,EAAUH,EAAKI,sBAAtBC,MACR,OACQ,yBAAKC,UAAU,cAEXH,EAAMI,QAAO,YAAqB,IAAZC,EAAW,EAAjBC,KAEZ,OADAR,QAAQC,IAAI,OAAQM,GACbA,EAAKE,MAAMC,OAAS,KAC5BC,KAAI,YAAqB,IAAZJ,EAAW,EAAjBC,KACN,OACQ,yBAAKH,UAAU,oBAAoBO,IAAKL,EAAKM,IACzC,4BACI,kBAAC,IAAD,CAAMC,GAAIP,EAAKQ,MACdR,EAAKE,QAIV,4BACCF,EAAKS,WAGN,2BACCT,EAAKU,KAAKC,oBAAoBC","file":"component---src-pages-blog-js-ddbfcfdd4c370fba62d3.js","sourcesContent":["/*\n    artifact generator: C:\\My\\wizzi\\stfnbssl\\wizzi-examples\\node_modules\\wizzi-js\\lib\\artifacts\\js\\module\\gen\\main.js\n    primary source IttfDocument: C:\\My\\wizzi\\stfnbssl\\wizzi-examples\\packages\\wizzi-starter-gatsby\\.wizzi\\src\\pages\\blog.js.ittf\n*/\n'use strict';\nimport React from \"react\";\nimport { graphql } from 'gatsby';\nimport Link from \"gatsby-link\";\nimport Helmet from \"react-helmet\";\nimport '../styles/blog-listing.css';\nexport default ({ data }) => {\n    console.log('blog graphql data', data);\n    const { edges: posts } = data.allContentfulBlogPost;\n    return  (\n            <div className=\"blog-posts\">\n            {\n                posts.filter(({ node: post }) => {\n                    console.log('post', post);\n                    return post.title.length > 0;\n                }).map(({ node: post }) => {\n                    return  (\n                            <div className=\"blog-post-preview\" key={post.id}>\n                                <h1>\n                                    <Link to={post.slug}>\n                                    {post.title}</Link>\n                                \n                                </h1>\n                            \n                                <h2>\n                                {post.createdAt}\n                                </h2>\n                            \n                                <p>\n                                {post.body.childMarkdownRemark.excerpt}\n                                </p>\n                            \n                            </div>\n                        )\n                    ;\n                })\n                \n            }</div>\n        )\n    ;\n}\nexport const pageQuery = graphql`\n    query blogIndexQuery {\n        allContentfulBlogPost(\n            filter: {\n                node_locale: {\n                    eq: \"en-US\"\n                }\n            }, \n            sort: {\n                order: DESC, \n                fields: [\n                    createdAt\n                ]\n            }\n        )\n        {\n            edges {\n                node {\n                    id, \n                    title, \n                    slug, \n                    createdAt(formatString: \"MMMM DD, YYYY\"), \n                    body {\n                        childMarkdownRemark {\n                            excerpt\n                        }\n                    }\n                }\n            }\n        }}\n`\n"],"sourceRoot":""}